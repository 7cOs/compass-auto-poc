<script type="text/javascript" src="data.js"></script>
<script type="text/javascript" src="style.js"></script>
<script type="text/javascript" src="events.js"></script>

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" 
	href="https://cdnjs.cloudflare.com/ajax/libs/
	font-awesome/4.7.0/css/font-awesome.min.css">

<script type="text/javascript">

	var d=null, q=null, qs=null, ci=null, 
	a=null; hd=null, cn=null, tbl=null, 
	xhttp=null;

	window.onload = function() {
		
		// - Intialise process - //
		init();
		
		// - Add main container - //
		cn = ci.add('cn'); 
		cn.id = data.ci.cnId;
		
		// - Add client-interface (ci) components - //
		for( var i in o=data.ci ) {
			if( typeof o[i] == 'object' ) {
				var cmp = cn.add(i);
				cmp.id = o[i].id;
				switch( i ) {
				case 'actions':
					o[i].items.forEach(function(o) {
						var b = cmp.add('btn');
						b.id = o.id; b.className = o.cls;
						b.textContent = o.text;
						b.self = o;
						setEvents(b);
					});
					break;					
				case 'main':
					for( var i in oo=o[i] ) {
						if( i != 'id' ) {
							cmp.add(i).id = oo[i].id;
							var cmp = cmp.lastChild;
							for( var i in oo ) {
								if(i=='contents') {
									oo[i].items.forEach(function(o) {
										for(var i in o) {
											if( i=='name' ) {
												var pn = cmp.add(o[i]);
												console.log( )
											}
										}
									});
								}
							}
						}
					}
					break;
				case 'fortschreiten':
					for( var i in oo=o[i] ) {
						if( i=='ico') {
							var cnIco = cmp.add('cn');
							var ico = cnIco.add(i);
							ico.self = oo[i]; 
							ico.id = oo[i].id;
							ico.className = oo[i].cls;
							var desc = cnIco.add('desc');
							desc.textContent = oo[i].desc;
						}
					}
					break;
				case 'header':
				case 'footer':
					for( var i in oo=o[i] ) {
						if(i=='contents') {
							cmp.add(i).id = oo[i].id;
							var cmp = cmp.lastChild;
							if(cmp.id == 'cnCiHeaderContents') {
								for( var i in ooo=oo[i] ) {
									if( i!= 'id' ) {
										cmp.add(i).textContent = ooo[i];
									}
								}
							} else if(cmp.id == 'cnCiFooterContents') {
								// - Adjust later - //
								cmp.innerHTML = 
									oo[i].items[1].copy +
									oo[i].items[1].quote;
							}
						}
					}
					break;
				}
			}
		}

		// - Style ci - //
		setCiStyle();
	};

	function init() {
		
		d=document;
		d.title=data.ci.title;

		q=function( q ) { return d.querySelector( q ); };
		qs=function( q ) { return d.querySelectorAll( q ); };
		
		// - Let ci be client-interface - //
		ci = d.body;
		ci.id = data.ci.id;
		
		Element.prototype.add = function(n) {
			var cmp = d.createElement(n);
			cmp.className = 'cmp';
			with( cmp.style ) {
				if ( n != 'ico' ) {
					display = 'block';
				}
			}
			// - Store progenitor in child - //
			cmp.progen = this;
			return this.appendChild(cmp);
		};
		
		Element.prototype.q = function( q ) {
			return this.querySelector( q );
		};
		
		Element.prototype.qs = function( q ) {
			return this.querySelectorAll( q );
		};
		
		Element.prototype.clear = function() {
			this.textContent = '';
		};
		
		Element.prototype.show = function( ) {
			this.style.display = '';
		};
		
		Element.prototype.hide = function( ) {
			this.style.display = 'none';
		};		
	}

</script>